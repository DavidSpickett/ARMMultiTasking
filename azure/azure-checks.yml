jobs:
- job: "linting_checks"
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
    - checkout: self
      path: 'ARMMultiTasking'

    - script: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip shellcheck
      displayName: apt-installs

    - script: |
        set -ex
        pip3 install setuptools wheel
        pip3 install virtualenv
        python3 -m virtualenv checkenv
        source checkenv/bin/activate
        pip3 install cogapp pycodestyle
      workingDirectory: $(Agent.BuildDirectory)
      displayName: pip-install

    - script: |
        # Check that we re-ran cog as needed
        set -ex
        source checkenv/bin/activate
        cd ARMMultiTasking
        export PYTHONPATH=.
        cog -r `find -name "*.c"` `find -name "*.cpp"` `find -name "*.h"`
        # See if anything changed
        git diff > /tmp/cog.diff
        cat /tmp/cog.diff
        # Continue to build anyway
        git checkout .
        # Fail the stage so we know to re-run cog
        ! test -s /tmp/cog.diff
      continueOnError: true
      workingDirectory: $(Agent.BuildDirectory)
      displayName: check-cog

    - script: |
        # Check that we ran clang-format
        set -ex
        cd ARMMultiTasking
        clang-format -i `find -name "*.c"` `find -name "*.cpp"` `find -name "*.h"`
        # See if anything changed
        git diff > /tmp/clang-format.diff
        cat /tmp/clang-format.diff
        git checkout .
        ! test -s /tmp/clang-format.diff
      continueOnError: true
      workingDirectory: $(Agent.BuildDirectory)
      displayName: check-clang-format

    - script: |
        set -ex
        source checkenv/bin/activate
        cd ARMMultiTasking
        pycodestyle `find -name "*.py"`
      continueOnError: true
      workingDirectory: $(Agent.BuildDirectory)
      displayName: pycodestyle

    - script: |
        set -ex
        cd ARMMultiTasking
        shellcheck `find -name "*.sh"`
      continueOnError: true
      workingDirectory: $(Agent.BuildDirectory)
      displayName: shellcheck

    - script: 'echo 1>&2'
      failOnStderr: true
      displayName: 'Fail partially succeeded.'
      condition: eq(variables['Agent.JobStatus'], 'SucceededWithIssues')
